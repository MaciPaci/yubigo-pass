name: CI

on: push

jobs:
  verify:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Run a multi-line script
#        shell: 'script -q -e -c "bash {0}"'
        run: |
          perl -E 'say "Is STDOUT a TTY?: ", -t STDOUT ? "yes" : "no"'

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.21

      - name: Verify dependencies
        run: go mod verify

      - name: Go vet
        run: go vet ./...

      - name: Staticcheck
        run: |
          go install honnef.co/go/tools/cmd/staticcheck@latest
          staticcheck ./...

  build:
    runs-on: ubuntu-latest
    needs: verify
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.21

      - name: Build
        run: go build -v ./...

  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.21

      - name: Set up gotestfmt
        uses: gotesttools/gotestfmt-action@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Test:unit
        run: |
          set -euo pipefail
          go test -json -v ./... -coverprofile coverage_unit.out -covermode count -tags=unit 2>&1 | tee /tmp/gotest_unit.log | gotestfmt

      - name: Upload log:unit
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-log-unit
          path: /tmp/gotest_unit.log
          if-no-files-found: error

      - name: Test:integration
        run: |
          set -euo pipefail
          go test -json -v ./... -coverprofile coverage_integration.out -covermode count -tags=integration 2>&1 | tee /tmp/gotest_integration.log | gotestfmt

      - name: Upload log:integration
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-log-integration
          path: /tmp/gotest_integration.log
          if-no-files-found: error

      - name: Test:e2e
        run: |
          set -euo pipefail
          go test -json -v ./... -coverprofile coverage_e2e.out -covermode count -tags=e2e 2>&1 | tee /tmp/gotest_e2e.log | gotestfmt

      - name: Upload log:e2e
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-log-e2e
          path: /tmp/gotest_e2e.log
          if-no-files-found: error

      - name: Coverage
        env:
          COVERALLS_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          go install github.com/wadey/gocovmerge@latest
          go install github.com/mattn/goveralls@latest
          $HOME/go/bin/gocovmerge coverage_unit.out coverage_integration.out coverage_e2e.out > coverage_combined.out
          go tool cover -func coverage_combined.out
          goveralls -coverprofile=coverage_combined.out -service=github

  security:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Security Scanner
        uses: securego/gosec@master
        with:
          args: ./...
